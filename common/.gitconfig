[user]
  name = nbr
  email = nikolaus.brunner@protonmail.ch
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEcYYtJDOq9qqSe++B/fT01ADNK1gkDf5BvO7HenOr6z

[init]
  defaultBranch = main

[branch]
  remote = origin
  rebase = true

[core]
  editor = nvim
  pager = delta

[merge]
  tool = vscode
  colorMoved = default

[pull]
  rebase = true

[mergetool "vscode"]
  cmd = code --wait $MERGED

[rebase]
  autosquash = true
  updateRefs = true

[diff]
  tool = vscode
  colorMoved = default

[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE

[delta]
  navigate = true
  ; side-by-side = true
  wrap-max-lines = 0
  hyperlinks = true
  hyperlinks-file-link-format = "lazygit-edit://{path}:{line}"
  line-numbers = true
  syntax-theme = base16-256

  # https://github.com/jesseduffield/lazygit/issues/4550
  ; dark = true
  light = true

[pager]
  diff = delta
  log = delta
  reflog = delta
  show = delta

[interactive]
  diffFilter = delta --color-only

[alias]
  sc = !~/bin/repo commit -s
  sb = !~/bin/repo branch -s

  graph = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all -10
  graphfull = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  last = log -1 HEAD
  root = rev-parse --show-toplevel

  fullreset = !git fetch origin && git reset --hard "origin/$(git rev-parse --abbrev-ref HEAD)" && git stash --include-untracked && git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D
  trunk = !git switch $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
  fresh = !git trunk && git fullreset && git switch -c
  wip = "!git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign --message \"--wip--\""
  unwip = "!git rev-list --max-count=1 --format=\"%s\" HEAD | grep -q \"\\--wip--\" && git reset HEAD~1"

  # Quick amend without editing message
  oops = commit --amend --no-edit

  # Show files changed in last commit
  files = diff-tree --no-commit-id --name-only -r HEAD

  # Undo last commit but keep changes staged
  undo = reset --soft HEAD~1

  # Quick stash with message based on current branch
  save = !git stash push -m "$(git rev-parse --abbrev-ref HEAD): $(date +%Y-%m-%d_%H:%M)"

  # Interactive rebase on last N commits (usage: git fix 3)
  fix = "!f() { git rebase -i HEAD~${1:-2}; }; f"

  # Show branches sorted by last commit date
  recent = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(color:cyan)%(refname:short)' refs/heads/

  # Delete all merged branches except default
  cleanup = !git branch --merged | grep -v $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@') | xargs -n 1 git branch -d

  # Quick commit with branch name prefix (useful for ticket numbers)
  ci = "!f() { git commit -m \"$(git rev-parse --abbrev-ref HEAD | grep -o '^[A-Z]*-[0-9]*' || echo 'feat'): $1\"; }; f"

  # Show current branch's upstream
  upstream = rev-parse --abbrev-ref --symbolic-full-name @{u}

  # Quick push with upstream set
  p = push -u origin HEAD

[gpg]
  format = ssh

[gpg "ssh"]
  allowedSignersFile = ~/.ssh/allowed_signers

[commit]
  gpgsign = true

# OS-specific includes (these files will contain platform-specific paths)
[include]
  path = ~/.gitconfig.local
