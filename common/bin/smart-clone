#!/usr/bin/env bash

# The goal of this script is to clone a repo to my repos folder
# It should use the git url to parse the repo owner and name and then clone it to the repos folder with the owner as the folder name
# and the repo name as a nested folder
# Example: git@github.com:nikbrunner/tanstack-start-playground.git
# should clone to ~/repos/nikbrunner/tanstack-start-playground

REPOS_DIR="$HOME/repos"

# Check if there's an argument
if [ $# -eq 0 ]; then
    echo "No arguments provided. Please provide a git URL."
    exit 1
fi

# Use the provided argument as the git URL
git_url="$1"

echo "Parsing URL: $git_url"

# Parse owner and repo from different URL formats
if [[ "$git_url" =~ git@github\.com:([^/]+)/([^/]+)\.git$ ]]; then
    # SSH format: git@github.com:owner/repo.git
    owner="${BASH_REMATCH[1]}"
    repo="${BASH_REMATCH[2]}"
elif [[ "$git_url" =~ https://github\.com/([^/]+)/([^/]+)/?$ ]]; then
    # HTTPS format: https://github.com/owner/repo or https://github.com/owner/repo/
    owner="${BASH_REMATCH[1]}"
    repo="${BASH_REMATCH[2]}"
elif [[ "$git_url" =~ https://github\.com/([^/]+)/([^/]+)\.git$ ]]; then
    # HTTPS format with .git: https://github.com/owner/repo.git
    owner="${BASH_REMATCH[1]}"
    repo="${BASH_REMATCH[2]}"
else
    echo "Could not parse git URL. Supported formats:"
    echo "  - git@github.com:owner/repo.git"
    echo "  - https://github.com/owner/repo"
    echo "  - https://github.com/owner/repo.git"
    exit 1
fi

echo "Owner: $owner"
echo "Repo: $repo"

# Create directory structure
target_dir="$REPOS_DIR/$owner"
mkdir -p "$target_dir"

# Check if repo already exists
if [ -d "$target_dir/$repo" ]; then
    echo "Repository already exists at $target_dir/$repo"
    read -p "Do you want to overwrite it? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        rm -rf "${target_dir:?}/${repo:?}"
    else
        echo "Aborted."
        exit 0
    fi
fi

echo "Cloning $git_url to $target_dir/$repo"
