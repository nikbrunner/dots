# yaml-language-server: $schema=https://raw.githubusercontent.com/jesseduffield/lazygit/master/schema/config.json
# https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md
os:
  open: "zed {{filename}}"
  editPreset: "nvim-remote"
  # edit: "nvim --server $NVIM --remote-send '<cmd>close<cr><cmd>lua EditFromLazygit({{filename}})<CR>'"
  # editAtLine: "nvim --server $NVIM --remote-send '<cmd>close<CR><cmd>lua EditLineFromLazygit({{filename}},{{line}})<CR>'"
  editInTerminal: true
  openDirInEditor: "nvim {{dir}}"
promptToReturnFromSubprocess: false
gui:
  theme:
    # Border color of focused window
    activeBorderColor:
      - default
      - bold

    # Border color of non-focused windows
    inactiveBorderColor:
      - gray

    # Border color of focused window when searching in that window
    searchingActiveBorderColor:
      - "#ffaa00"
      - bold

    # Color of keybindings help text in the bottom line
    optionsTextColor:
      - blue

    # Background color of selected line.
    # See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#highlighting-the-selected-line
    selectedLineBgColor:
      - gray

    # Background color of selected line when view doesn't have focus.
    inactiveViewSelectedLineBgColor:
      - bold

    # Foreground color of copied commit
    cherryPickedCommitFgColor:
      - reverse

    # Background color of copied commit
    cherryPickedCommitBgColor:
      # - cyan

    # Foreground color of marked base commit (for rebase)
    markedBaseCommitFgColor:
      - "#ffffff"

    # Background color of marked base commit (for rebase)
    markedBaseCommitBgColor:
      - "#27ae60"

    # Color for file with unstaged changes
    unstagedChangesColor:
      - "#e74c3c"

    # Default text color
    defaultFgColor:
      - default
  authorColors:
    "nbr": "#ff8833"
    "*": default
  branchColors:
    "main": "#e74c3c"
    "master": "#e74c3c"
    "^bcd": "#3EE7B1"
  # stuff relating to the UI
  scrollHeight: 10 # how many lines you scroll by
  scrollPastBottom: true # enable scrolling past the bottom
  sidePanelWidth: 0.25 # number from 0 to 1
  expandFocusedSidePanel: true
  mainPanelSplitMode: flexible # one of 'horizontal' | 'flexible' | 'vertical'
  portraitMode: auto # one of 'auto' | 'never' | 'always'
  enlargedSideViewLocation: left # one of 'left' | 'top'
  # theme:
  #   selectedLineBgColor:
  #     - reverse
  commitLength:
    show: true
  mouseEvents: true
  skipDiscardChangeWarning: false
  skipStashWarning: true
  showFileTree: true # for rendering changes files in a tree format
  nerdFontsVersion: "3" # nerd fonts version to use ("2" or "3"); empty means don't show nerd font icons
  border: "single" # one of 'single' | 'double' | 'rounded' | 'hidden'
git:
  commit:
    autoWrapCommitMessage: true
    autoWrapWidth: 72
  commitPrefixes:
    bc-desktop-client:
      - pattern: "^bcd-(\\d{4}).*"
        replace: "BCD-$1 "
    bc-web-client-poc:
      - pattern: "^bcd-(\\d{4}).*"
        replace: "BCD-$1 "
    bc-homepage:
      - pattern: "^bcd-(\\d{4}).*"
        replace: "BCD-$1 "
    terra-core.nvim:
      - pattern: "^feature/dev-(\\d{3}).*"
        replace: "DEV-$1 "
  paging:
    colorArg: always
    pager: delta --paging=never
  merging:
    # only applicable to unix users
    manualCommit: false
    # extra args passed to `git merge`, e.g. --no-ff
    args: ""
  skipHookPrefix: WIP
  autoFetch: true
  # The main branches. We colour commits green if they belong to one of these branches,
  # so that you can easily see which commits are unique to your branch (coloured in yellow)
  mainBranches: [master, main]
  branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
  overrideGpg: true # prevents lazygit from spawning a separate process when using GPG
  disableForcePushing: false
  allBranchesLogCmds:
    - git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium
refresher:
  refreshInterval: 10 # file/submodule refresh interval in seconds
  fetchInterval: 60 # re-fetch interval in seconds
update:
  method: prompt # can be: prompt | background | never
  days: 14 # how often an update is checked for
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
quitOnTopLevelReturn: false
disableStartupPopups: false
notARepository: "skip" # one of: 'prompt' | 'create' | 'skip'
customCommands:
  - key: "D"
    command: "git branch -D {{.SelectedLocalBranch.Name}}"
    context: "localBranches"
  - key: "G"
    context: "localBranches"
    command: "git fullreset"
    output: terminal
  - key: "Z"
    context: "files"
    command: "repo commit -s"
    output: terminal
  - key: "N"
    context: "localBranches"
    prompts:
      - type: "menu"
        title: "What kind of branch is it?"
        key: "BranchType"
        options:
          - name: "feature"
            description: "a feature branch"
            value: "feature"
          - name: "hotfix"
            description: "a hotfix branch"
            value: "hotfix"
          - name: "release"
            description: "a release branch"
            value: "release"
      - type: "input"
        title: "What is the new branch name?"
        key: "BranchName"
        initialValue: ""
    command: "git flow {{.Form.BranchType}} start {{.Form.BranchName}}"
    loadingText: "Creating branch"
